<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="dadadce4-513a-46b4-85d6-56fbfde31f06" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.envrc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Dockerfile.etl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/api.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/ingestion.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docs/swagger.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/TASK.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/TASK.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/setup.py" beforeDir="false" afterPath="$PROJECT_DIR$/setup.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/api/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/api/main.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/common/db.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/common/db.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ingestion/etl.py" beforeDir="false" afterPath="$PROJECT_DIR$/src/ingestion/etl.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2pX75TBHF8W6XC4DyuoPieKq58z" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml.api: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.db: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "FastAPI.tp-api.executor": "Run",
    "Python tests.Python tests for api.test_api.TestApiEndpoints.test_read_root.executor": "Run",
    "Python tests.Python tests for api.test_api.TestFastAPIEndpoints.executor": "Run",
    "Python tests.Python tests for api.test_api.TestFastAPIEndpoints.test_create_review.executor": "Run",
    "Python.ingest CSV.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/home/stefan/Projects/trustpilot/tests/ingestion",
    "settings.editor.selected.configurable": "com.intellij.pycharm.community.ide.impl.configuration.PythonContentEntriesConfigurable"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ],
    "com.intellij.ide.scratch.LRUPopupBuilder$1/SQL Dialect": [
      "PostgreSQL"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/tests/ingestion" />
      <recent name="$PROJECT_DIR$/tests/common" />
      <recent name="$PROJECT_DIR$/src/api" />
      <recent name="$PROJECT_DIR$/docs" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/raw_layer" />
    </key>
  </component>
  <component name="RunManager" selected="Python.ingest CSV">
    <configuration name="ingest CSV" type="PythonConfigurationType" factoryName="Python">
      <module name="trustpilot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.13 (trustpilot)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.PycharmRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="true" />
        <option name="DIRENV_TRUSTED" value="true" />
      </EXTENSION>
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/src/ingestion/etl.py" />
      <option name="PARAMETERS" value="src/raw_layer/dataops_tp_reviews.csv" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="tp-api" type="Python.FastAPI">
      <option name="file" value="$PROJECT_DIR$/src/api/main.py" />
      <module name="trustpilot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="$PROJECT_DIR$/venv/bin/python" />
      <option name="SDK_NAME" value="Python 3.13 (trustpilot)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <EXTENSION ID="com.fapiko.jetbrains.plugins.better_direnv.runconfigs.PycharmRunConfigurationExtension">
        <option name="DIRENV_ENABLED" value="true" />
        <option name="DIRENV_TRUSTED" value="true" />
      </EXTENSION>
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.api: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="api" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="Python tests for api.test_api.TestFastAPIEndpoints" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="trustpilot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;api.test_api.TestFastAPIEndpoints&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for functional.test_api" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="trustpilot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;functional.test_api&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for functional.test_api.TestApiEndpoints.test_read_root" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="trustpilot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;functional.test_api.TestApiEndpoints.test_read_root&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for functional.test_api" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="trustpilot" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;functional.test_api&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml.api: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
      <item itemvalue="FastAPI.tp-api" />
      <item itemvalue="Python.ingest CSV" />
      <item itemvalue="Python tests.Python tests for api.test_api.TestFastAPIEndpoints" />
      <item itemvalue="Python tests.Python tests for functional.test_api" />
      <item itemvalue="Python tests.Python tests for functional.test_api.TestApiEndpoints.test_read_root" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.api: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="Python tests.Python tests for functional.test_api.TestApiEndpoints.test_read_root" />
        <item itemvalue="Python tests.Python tests for functional.test_api" />
        <item itemvalue="Python tests.Python tests for functional.test_api" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-0029f7779945-399fe30bd8c1-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.23339.19" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="dadadce4-513a-46b4-85d6-56fbfde31f06" name="Changes" comment="" />
      <created>1732900382873</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1732900382873</updated>
      <workItem from="1732900384478" duration="10966000" />
      <workItem from="1732963053151" duration="28780000" />
      <workItem from="1733064043528" duration="2269000" />
      <workItem from="1733090754446" duration="4547000" />
      <workItem from="1733095733119" duration="3015000" />
    </task>
    <servers />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/trustpilot$.coverage" NAME=" Coverage Results" MODIFIED="1733065772533" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/trustpilot$tp_api.coverage" NAME="tp-api Coverage Results" MODIFIED="1733095342179" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/trustpilot$ingest_CSV.coverage" NAME="ingest CSV Coverage Results" MODIFIED="1733096933472" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
  </component>
</project>